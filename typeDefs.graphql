input PostInput {
    userId: Int!
    title: String!
    body: String!
}

input PostUpdateInput {
    userId: Int
    title: String
    body: String
}

input CommentInput {
    postId: Int!
    userId: Int!
    body: String!
}

input CommentUpdateInput {
    body: String
}

# -------------- All Queries -------------- #
type Query {
    user(userId: Int!): User!
    users: [User!]
    post(postId: ID!): Post!
    posts: [Post!]
    comment(commentId: ID!): Comment!
    comments: [Comment!]
}

# -------------- All Mutations -------------- #
type Mutation {
    ## Post
    addPost(data: PostInput!): Post!
    updatePost(postId: ID!, data: PostUpdateInput!): Post!
    deletePost(postId: ID!): Post!

    ## Comment
    addComment(data: CommentInput!): Comment!
    updateComment(commentId: ID!, data: CommentUpdateInput!): Comment!
    deleteComment(commentId: ID!): Comment!
}

# -------------- Post typedef -------------- #
type Post {
    id: ID!
    title: String!
    body: String!
    author: User!
    comments: [Comment!]!
}
# -------------- Comment typedef -------------- #
type Comment {
    id: ID!
    body: String!
    post: Post!
    author: User!
}
# -------------- User typedef -------------- #
type User {
    id: ID!
    name: String!
    username: String!
    email: String!
    address: Address
    phone: String!
    website: String!
    company: Company!
    posts: [Post!]!
}
type Company {
    name: String!
    catchPhrase: String!
    bs: String!
}
type Address {
    street: String!
    suite: String!
    city: String!
    zipcode: String!
    geo: Geo!
}
type Geo {
    lat: Float!
    lng: Float!
}
